name: Build and deploy to GKE

on:
  push:
    branches: [infra/deployment-gke]

env:
  PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
  REGION: europe-west9
  CLUSTER: gofly-01
  DEPLOYMENT_NAME: gofly-api
  REPOSITORY: docker-registry
  IMAGE: gofly-api-0.0.1-SNAPSHOT

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Setup, Build, Publish and Deploy
    environment: dev
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker configuration
        run: |-
          echo ${{steps.auth.outputs.credentials_json}} | docker login -u oauth2accesstoken --password-stdin https://$REGION-docker.pkg.dev

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ env.LOCATION }}

      - name: Build the docker image
        run: |-
          docker build ./gofly-api \
            --tag "$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF"

      - name: Push the docker image to Artifact Registry
        run: |-
          docker push "$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          
      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
          ./kustomize build ./gofly-api/ | kubectl apply -f ./gofly-api/deploy/k8s/gofly-api
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide